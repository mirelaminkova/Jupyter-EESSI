---
- name: Install the Cuda Toolkit
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Wait for system to become reachable
      wait_for_connection:
        timeout: 300

    - name: Gather facts for first time
      setup:

    - name: Install CUDA toolkit when distribution is Ubuntu and workspace uses a GPU flavour
      when: ansible_distribution == 'Ubuntu' and 'GPU' in flavour_name
      block:

        - name: Update the package cache and metadata
          apt:
            update_cache: yes

        - name: Install Kernel headers and development packages
          shell: "sudo apt-get install linux-headers-$(uname -r)"

        - name: Create a Download directory for the installation file
          file:
            path: /opt/Nvidia-Downloads
            recurse: yes
            mode: '0755'
            state: directory

        - name: Download the .pin file to prioritise the cuda repository
          get_url:
            url: https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-ubuntu1804.pin
            dest: /etc/apt/preferences.d/cuda-repository-pin-600

        - name: Fetch the repository installation file
          get_url:
            url: https://developer.download.nvidia.com/compute/cuda/11.1.1/local_installers/cuda-repo-ubuntu1804-11-1-local_11.1.1-455.32.00-1_amd64.deb
            dest: /opt/Nvidia-Downloads/cuda-repo-ubuntu1804-11-1-local_11.1.1-455.32.00-1_amd64.deb

        - name: Install the .deb file
          apt:
            deb: /opt/Nvidia-Downloads/cuda-repo-ubuntu1804-11-1-local_11.1.1-455.32.00-1_amd64.deb

        - name: Add a GPG-key for the Cuda repository
          apt_key:
            file: /var/cuda-repo-ubuntu1804-11-1-local/7fa2af80.pub

        - name: Update the package cache and metadata again for the cuda package installation
          apt:
            update_cache: yes

        # After the installation of the Cuda driver, the Workspace is restarted automatically by Ubuntu. This makes Ansible lose it's connection to the Workspace and causes 
        # the deployment to hang. Therefore an async module is used so that when a reboot is initiated and the task "fails" it moves on to waiting until the machine comes up again.

        - name: Install the Cuda package and wait a maximum of 20 minutes
          apt:
            name: cuda
            state: present
          async: 1200
          poll: 5

        - name: Wait for the workspace to be rebooted
          wait_for_connection:
            timeout: 120

        - name: Remove the /opt/Nvidia-Downloads directory to save space and standardise configuration
          file:
            path: /opt/Nvidia-Downloads/
            state: absent

        - name: Add PATH to cuda binaries
          copy:
            content: export PATH=/usr/local/cuda-11.1/bin${PATH:+:${PATH}}
            dest: /etc/profile.d/cuda.sh
            mode: '0755'

        - name: Start persistence daemon
          command: /usr/bin/nvidia-persistenced --verbose

        - name: Start persistence daemon at boot using cronjob
          cron:
            name: Start Nvidia persistence daemon
            special_time: reboot
            job: "/usr/bin/nvidia-persistenced --verbose"
