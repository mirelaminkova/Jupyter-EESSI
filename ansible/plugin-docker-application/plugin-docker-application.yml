---
- name: Start a containerized application in Docker
  hosts:
    - localhost
  gather_facts: true
  # necessary to execute docker commands
  become: true

  vars:
    dockerfile_dest: /opt/src_docker
    external_volume_dir: /data/volume_2

  tasks:
    - name: Install Docker
      apt:
        name: docker.io

    - name: Check if GPU available
      stat:
        path: /usr/bin/nvidia-smi
      register: nvidia_smi_bin

    - name: Set up Docker NVIDIA driver
      when: nvidia_smi_bin.stat.exists
      block:
        # We verify if this is a GPU-workspace if /usr/bin/nvidia-smi is available
        - name: Download runtime configuration
          shell: |
            distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
            curl -s -L https://nvidia.github.io/nvidia-container-runtime/$distribution/nvidia-container-runtime.list |   sudo tee /etc/apt/sources.list.d/nvidia-container-runtime.list
        - name: Install runtime
          apt:
            name: nvidia-container-runtime
        - name: Restart Docker daemon
          ansible.builtin.systemd:
            state: restarted
            daemon_reload: yes
            name: docker

    - name: Check if there is an external volume attached
      stat:
        path: "{{ external_volume_dir }}"
      register: is_external_volume

    - name: Build image from Dockerfile (if provided)
      when: dockerfile_url != "empty"
      block:
        # We set the default URL to the Dockerfile to "empty" of the 
        # `dockerfile_url` parameter
        - name: Create Dockerfile directory
          file:
            path: "{{ dockerfile_dest }}"
            state: directory
            mode: 755
        - name: Download Dockerfile
          get_url:
            url: "{{ dockerfile_url }}"
            dest: "{{ dockerfile_dest }}/Dockerfile"
        - name: Check that the Dockerfile exists
          stat:
            path: "{{ dockerfile_dest }}/Dockerfile"
          register: stat_result_dockerfile
        - name: Build Docker image
          community.docker.docker_image:
            build:
              path: "{{ dockerfile_dest }}"
            name: src_image
            source: build
          when: stat_result_dockerfile.stat.exists

    - name: Run docker container from image
      when: dockerfile_url != "empty" or docker_image != "empty"
      community.docker.docker_container:
        name: src_container
        # Dockerfile image (src_image) has precedence over docker_image
        image: "{{ 'src_image' if dockerfile_url != 'empty' else docker_image }}"
        command: "{{ docker_command }}"
        # `detach` and `tty` keep the docker container running in background
        detach: yes
        tty: yes
        volumes: "{{ external_volume_dir + ':' + external_volume_dir if is_external_volume.stat.exists | default(false) else omit }}"
        device_requests:
          - # Add NVIDIA GPUs to this container
            driver: nvidia
            count: -1  # this means we want all
            capabilities:
              - gpu
